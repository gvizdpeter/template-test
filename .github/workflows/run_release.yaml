name: Run release

on:
  pull_request:
    types: [edited, synchronize]

jobs:
  get-deploy-labels:
    runs-on: ubuntu-latest
    outputs:
      deployLabels: ${{ steps.get-deploy-labels.outputs.result }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/github-script@v6
      id: get-deploy-labels
      with:
        result-encoding: json
        script: |
          const { data: labels } = await github.rest.issues.listLabelsOnIssue({
            issue_number: context.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const deployLabels = []
          for (const label of labels) {
            if (label.name.startsWith("deploy)) {
              deployLabels.push(label.name)
            }
          }
          return deployLabels;

  run-release:
    runs-on: ubuntu-latest
    needs: get-deploy-labels
    strategy:
      matrix:
        deployLabel: ${{ fromJSON(needs.get-deploy-labels.outputs.deployLabels) }}
    steps:
      - name: Release ${{ matrix.deployLabel }}
        run: |
          echo ${{ matrix.deployLabel }}
