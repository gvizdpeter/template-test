name: Add deploy labels

on:
  issue_comment:
    types: [created]

jobs:
  add-deploy-labels:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/deploy')
    runs-on: ubuntu-latest
    outputs:
      comment-params: ${{ steps.add-deploy-labels.outputs.result }}
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - uses: actions/github-script@v6
      id: add-deploy-labels
      with:
        result-encoding: json
        script: |
          const commentParams = "${{ github.event.comment.body }}".substring(1).replaceAll(" ", ":");
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [commentParams]
          });
          return [commentParams];

  remove-deploy-labels:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/delete')
    runs-on: ubuntu-latest
    outputs:
      comment-params: ${{ steps.remove-deploy-labels.outputs.result }}
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/get-deploy-labels
      id: get-deploy-labels
      with:
        pr-id: ${{ github.event.issue.number }}
    - uses: actions/github-script@v6
      id: remove-deploy-labels
      with:
        result-encoding: json
        script: |
          const commentParams = "${{ github.event.comment.body }}".split(' ');
          const labels = JSON.parse(${{ toJSON(steps.get-deploy-labels.outputs.deploy-labels) }});
          let setLabels = []
          for (const label of labels) {
            if (!label.startsWith("deploy:" + commentParams[1])) {
              setLabels.push(label.name)
            }
          }
          github.rest.issues.setLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: setLabels
          });
          return ["${{ github.event.comment.body }}".substring(1).replaceAll(" ", ":")];

  run-jenkins:
    permissions:
      pull-requests: write
    needs:
    - add-deploy-labels
    - remove-deploy-labels
    if: always() && contains(needs.*.result, 'success')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deploy-label: ${{ contains(needs.add-deploy-labels.result, 'success') && needs.add-deploy-labels.outputs.comment-params || needs.remove-deploy-labels.outputs.comment-params }}
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/sim-jenkins
      with:
        pr-id: ${{ github.event.issue.number }}
        deploy-label: ${{ matrix.deploy-label }}
